generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model AccountLink {
  facebookId String @unique
  id         Int    @default(autoincrement()) @id
  kakaoId    String @unique
  userId     Int    @unique
  User       User   @relation(fields: [userId], references: [id])
}

model Coupon {
  createdAt DateTime @default(now())
  desc      String
  expireAt  DateTime
  id        Int      @default(autoincrement()) @id
  restId    Int
  servcie   String
  startAt   DateTime
  userId    Int
  warn      String
  Rest      Rest     @relation(fields: [restId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model Event {
  createdAt DateTime @default(now())
  expireAt  DateTime
  id        Int      @default(autoincrement()) @id
  startAt   DateTime
  thumbnail String
  url       String   @unique
}

model File {
  id     Int    @default(autoincrement()) @id
  restId Int
  url    String
  Rest   Rest   @relation(fields: [restId], references: [id])
}

model Like {
  id     Int  @default(autoincrement()) @id
  restId Int
  userId Int
  Rest   Rest @relation(fields: [restId], references: [id])
  User   User @relation(fields: [userId], references: [id])
}

model Location {
  latitude  Float
  longitude Float
  restId    Int   @unique
  Rest      Rest  @relation(fields: [restId], references: [id])

  @@unique([latitude, longitude], name: "Location.latitude_longitude")
}

model Profile {
  birthday DateTime?
  email    String?   @unique
  gender   Gender?   @default(dbgenerated())
  id       Int       @default(autoincrement()) @id
  name     String?
  userId   Int       @unique
  User     User      @relation(fields: [userId], references: [id])
}

model Rest {
  closeAt   DateTime?
  desc      String
  id        Int       @default(autoincrement()) @id
  name      String
  openAt    DateTime?
  phone     String
  thumbnail String
  Coupon    Coupon[]
  File      File[]
  Like      Like[]
  Location  Location?
  Service   Service?
}

model Service {
  desc      String
  restId    Int     @unique
  service   String
  validTime Int     @default(168)
  warn      String?
  Rest      Rest    @relation(fields: [restId], references: [id])
}

model User {
  createdAt   DateTime     @default(now())
  id          Int          @default(autoincrement()) @id
  nickname    String       @unique
  phone       String       @unique
  AccountLink AccountLink?
  Coupon      Coupon[]
  Like        Like[]
  Profile     Profile?
}

enum Gender {
  FEMALE
  MALE
}