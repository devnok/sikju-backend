generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model AccountLink {
  provider Provider
  token String
  id String
  userId     String  @unique
  user       User    @relation(fields: [userId], references: [id])
  @@id([provider, id])
}

model Coupon {
  createdAt DateTime @default(now())
  desc      String
  expireAt  DateTime
  id        Int      @default(autoincrement()) @id
  restId    Int
  service   String
  userId    String
  warn      String
  rest      Rest     @relation(fields: [restId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Event {
  createdAt DateTime @default(now())
  expireAt  DateTime
  id        Int      @default(autoincrement()) @id
  startAt   DateTime
  thumbnail String
  url       String   @unique
}

model File {
  id     Int    @default(autoincrement()) @id
  restId Int
  url    String
  rest   Rest   @relation(fields: [restId], references: [id])
}

model Like {
  id     Int    @default(autoincrement()) @id
  restId Int
  userId String
  rest   Rest   @relation(fields: [restId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@unique([restId, userId])
}

model Location {
  latitude  Float
  longitude Float
  restId    Int   @unique
  rest      Rest  @relation(fields: [restId], references: [id])
}

model Profile {
  birthday DateTime?
  email    String?   @unique
  gender   Gender?
  id       Int       @default(autoincrement()) @id
  name     String?
  userId   String    @unique
  user     User      @relation(fields: [userId], references: [id])
}

model Rest {
  openingHours String?
  desc      String
  id        Int       @default(autoincrement()) @id
  name      String
  phone     String
  thumbnail String
  coupons    Coupon[]
  File      File[]
  Like      Like[]
  Location  Location
  Service   Service?
}

model Service {
  desc      String
  restId    Int     @unique
  service   String
  validTime Int     @default(168)
  warn      String?
  rest      Rest    @relation(fields: [restId], references: [id])
}

model User {
  createdAt   DateTime     @default(now())
  id          String       @id
  nickname    String       @unique
  phone       String       @unique
  links       AccountLink[]
  coupons     Coupon[]
  likes       Like[]
  profile     Profile
}
model Authentication {
  code String
  limit Int @default(5)
  createdAt DateTime @default(now())
  expireAt DateTime
  provider Provider
  id String
  @@id([provider,id])
}

model spatial_ref_sys {
  auth_name String?
  auth_srid Int?
  proj4text String?
  srid      Int     @id
  srtext    String?
}
enum Provider {
  KAKAO
  FACEBOOK
}
enum Gender {
  FEMALE
  MALE
}