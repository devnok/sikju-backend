generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model AccountLink {
  facebookId String? @unique
  kakaoId    String? @unique
  userId     String @unique
  user       User   @relation(fields: [userId], references: [id])
}

model Coupon {
  createdAt DateTime @default(now())
  desc      String
  expireAt  DateTime
  id        Int      @default(autoincrement()) @id
  restId    Int
  servcie   String
  startAt   DateTime
  userId    String
  warn      String
  rest      Rest     @relation(fields: [restId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Event {
  createdAt DateTime @default(now())
  expireAt  DateTime
  id        Int      @default(autoincrement()) @id
  startAt   DateTime
  thumbnail String
  url       String   @unique
}

model File {
  id     Int    @default(autoincrement()) @id
  restId Int
  url    String
  rest   Rest   @relation(fields: [restId], references: [id])
}

model Like {
  id     Int    @default(autoincrement()) @id
  restId Int
  userId String
  rest   Rest   @relation(fields: [restId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
  @@unique([restId, userId])
}

model Location {
  latitude  Float
  longitude Float
  restId    Int   @unique
  rest      Rest  @relation(fields: [restId], references: [id])

  @@unique([latitude, longitude], name: "Location.latitude_longitude")
}

model Profile {
  birthday DateTime?
  email    String?   @unique
  gender   Gender?
  id       Int       @default(autoincrement()) @id
  name     String?
  userId   String    @unique
  user     User      @relation(fields: [userId], references: [id])
}

model Rest {
  closeAt   DateTime?
  desc      String
  id        Int       @default(autoincrement()) @id
  name      String
  openAt    DateTime?
  phone     String
  thumbnail String
  coupon    Coupon[]
  files      File[]
  like      Like[]
  location  Location
  service   Service?
}

model Service {
  desc      String
  restId    Int     @unique
  service   String
  validTime Int     @default(168)
  warn      String?
  rest      Rest    @relation(fields: [restId], references: [id])
}

model User {
  createdAt   DateTime     @default(now())
  id          String       @id @default(cuid())
  nickname    String       @unique
  phone       String       @unique
  accountLink AccountLink?
  coupon      Coupon[]
  like        Like[]
  profile     Profile?
}

enum Gender {
  FEMALE
  MALE
}