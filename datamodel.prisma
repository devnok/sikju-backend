type User{
  id: ID! @id
  username: String! @unique
  phone: String! @unique
  point: Int! @default(value: 0)
  reviews: [Review!]!
  restUser: RestUser @relation(link: INLINE, name: "UserRestUser", onDelete: CASCADE)
  loginSecret: String
}
type Rest{
  id: ID! @id
  menu: [Food!]!
  name: String!
  info: String!
  phone: String
  reviews: [Review!]!
  files: [RestFile!]!
  location: Location! @unique
  services: [Service!]!
  restUser: RestUser! @relation(name: "RestUserRest", onDelete: SET_NULL)
}
type RestFile{
  id: ID! @id
  url: String!
  rest: Rest!
}
type RestUser{
  id: ID! @id
  rest: Rest! @unique @relation(link: INLINE, name: "RestUserRest", onDelete: CASCADE)
  user: User! @unique @relation(name: "UserRestUser", onDelete: SET_NULL)
}
type Food{
  id: ID! @id
  file: FoodFile @relation(link: INLINE)
  name: String!
  desc: String!
  cost: Int!
  options: [Option!]!
}
type Option{
  id: ID! @id
  title: String!
  text: String! @default(value: "")
}
type Review{
  id: ID! @id
  rating: Int!
  createdAt: DateTime! @createdAt
  files: [ReviewFile!]!
}
type FoodFile{
  id: ID! @id
  url: String!
  food: Food!
}
type ReviewFile{
  id: ID! @id
  url: String!
  review: Review!
}
type Location{
  id: ID! @id
  latitude: Float!
  longitude: Float!
}
type Auction{
  id: ID! @id
  location: Location!
  n: Int!
  text: String! @default(value: "")
  owner: User!
  createdAt: DateTime! @createdAt
  bids: [Bid!]!
}
type Bid{
  id: ID! @id
  auction: Auction!
  service: String!
  restUser: RestUser!
  win: Boolean
}
type Service{
  id: ID! @id
  restUser: RestUser!
  text: String!
}